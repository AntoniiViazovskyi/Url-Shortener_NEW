plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'jacoco'
	id "org.barfuin.gradle.jacocolog" version "3.1.0"
}

group = 'com.goit'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '22'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	// https://mvnrepository.com/artifact/org.flywaydb/flyway-core
	implementation 'org.flywaydb:flyway-core:10.13.0'
	// https://mvnrepository.com/artifact/org.flywaydb/flyway-database-postgresql
	runtimeOnly 'org.flywaydb:flyway-database-postgresql:10.13.0'


//    implementation 'junit:junit:4.13.1'
    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    implementation 'io.jsonwebtoken:jjwt:0.12.5'
    compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.security:spring-security-test'
//	testImplementation 'org.testcontainers:junit-jupiter'
//	testImplementation 'org.testcontainers:postgresql'
	testImplementation "org.testcontainers:postgresql:1.19.8"
	testImplementation "org.testcontainers:junit-jupiter:1.19.8"
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}

	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				// test coverages in percents
				minimum = 0.5
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification
